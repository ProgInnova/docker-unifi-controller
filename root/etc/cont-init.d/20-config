#!/usr/bin/with-contenv bash

if [[ "$(uname -m)" == "armv7l" ]]; then
    # We don't support armhf any more
    exit 0
fi

# create our folders
mkdir -p \
    /config/{data,logs,run}


# create symlinks for config
symlinks=( \
/usr/lib/unifi/data \
/usr/lib/unifi/logs \
/usr/lib/unifi/run )

for i in "${symlinks[@]}"
do
[[ -L "$i" && ! "$i" -ef /config/"$(basename "$i")"  ]] && unlink "$i"
[[ ! -L "$i" ]] && ln -s /config/"$(basename "$i")" "$i"
done

#export COMP_WORDBREAKS=${COMP_WORDBREAKS//:}

if [[ ! -e /config/data/system.properties ]]; then
    cp /defaults/system.properties /config/data
    echo "Running remote? $MONGO_REMOTE"
    if [[ "$MONGO_REMOTE" = true ]]; then
        echo "Using mongodb remote server $DATABASE_HOST:$DATABASE_PORT"
        #mongo $MONGODB_CONNECTION --eval "db.stats()" > /dev/null
        COUNTER=0
        nc -zv $DATABASE_HOST $DATABASE_PORT
        while [[ $? -ne 0 && $COUNTER -lt 60 ]] ; do
    	    sleep 2
    	    let COUNTER+=2
    	    echo "Waiting for mongo to initialize... ($COUNTER seconds so far)"
    	    nc -zv $DATABASE_HOST $DATABASE_PORT
	    done
        
        if [[ $COUNTER -ne 60 ]]; then
           echo "Mongo connection worked"
	   
           if [[ -z "$DATABASE_USER" ]]; then
               printf "db.mongo.uri=mongodb://%s:%s/\n" $DATABASE_HOST $DATABASE_PORT >> /config/data/system.properties
           else
               printf "db.mongo.uri=mongodb://%s:%s@%s:%s/\n" $DATABASE_USER $DATABASE_PASS $DATABASE_HOST $DATABASE_PORT >> /config/data/system.properties
           fi
        else
           echo "Mongo connection failed"
           exit 1
        fi
        echo "db.mongo.local=false" >> /config/data/system.properties
        echo "unifi.db.name=$DATABASE_NAME" >> /config/data/system.properties
        tail -n 10 /config/data/system.properties
    elif [ ! -f /usr/bin/mongod ]; then
        echo "MongoDB Server not installed, use the full version image"
        exit 1
    fi
fi


if grep -q "xmx" /config/data/system.properties && grep -q "xms" /config/data/system.properties; then

    if [[ $MEM_LIMIT == "default" ]]; then
        echo "*** Setting Java memory limit to default ***"
        sed -i "/unifi.xmx=.*/d" /config/data/system.properties
    elif [[ -n $MEM_LIMIT ]]; then
        echo "*** Setting Java memory limit to $MEM_LIMIT ***"
        sed -i "s/unifi.xmx=.*/unifi.xmx=$MEM_LIMIT/" /config/data/system.properties 
    fi

    if [[ $MEM_STARTUP == "default" ]]; then
        echo "*** Setting Java memory minimum to default ***"
        sed -i "/unifi.xms=.*/d" /config/data/system.properties
    elif [[ -n $MEM_STARTUP ]]; then
        echo "*** Setting Java memory minimum to $MEM_STARTUP ***"
        sed -i "s/unifi.xms=.*/unifi.xms=$MEM_STARTUP/" /config/data/system.properties
    fi

elif grep -q "xmx" /config/data/system.properties; then

    if [[ $MEM_LIMIT == "default" ]]; then
        echo "*** Setting Java memory limit to default ***"
        sed -i "/unifi.xmx=.*/d" /config/data/system.properties
    elif [[ -n $MEM_LIMIT ]]; then
        echo "*** Setting Java memory limit to $MEM_LIMIT ***"
        sed -i "s/unifi.xmx=.*/unifi.xmx=$MEM_LIMIT/" /config/data/system.properties
    fi

    if [[ -n $MEM_STARTUP ]]; then
        echo "*** Setting Java memory minimum to $MEM_STARTUP ***"
        echo "unifi.xms=$MEM_STARTUP" >> /config/data/system.properties
    fi

elif grep -q "xms" /config/data/system.properties; then

    if [[ $MEM_STARTUP == "default" ]]; then
        echo "*** Setting Java memory minimum to default ***"
        sed -i "/unifi.xms=.*/d" /config/data/system.properties
    elif [[ -n $MEM_STARTUP ]]; then
        echo "*** Setting Java memory minimum to $MEM_STARTUP ***"
        sed -i "s/unifi.xms=.*/unifi.xms=$MEM_STARTUP/" /config/data/system.properties
    fi

    if [[ -n $MEM_LIMIT ]]; then
        echo "*** Setting Java memory limit to $MEM_LIMIT ***"
        echo "unifi.xmx=$MEM_LIMIT" >> /config/data/system.properties 
    fi

else

    if [[ -n $MEM_LIMIT ]]; then
        echo "*** Setting Java memory limit to $MEM_LIMIT ***"
        echo "unifi.xmx=$MEM_LIMIT" >> /config/data/system.properties 
    fi

    if [[ -n $MEM_STARTUP ]]; then
        echo "*** Setting Java memory minimum to $MEM_STARTUP ***"
        echo "unifi.xms=$MEM_STARTUP" >> /config/data/system.properties
    fi

fi

# permissions
chown -R abc:abc \
	/config \
	/usr/lib/unifi
